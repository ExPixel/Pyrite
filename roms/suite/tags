!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a20bb99d/
$(BUILD)	Makefile	/^$(BUILD):$/;"	t
$(OUTPUT).elf	Makefile	/^$(OUTPUT).elf	:	$(OFILES)$/;"	t
$(OUTPUT).gba	Makefile	/^$(OUTPUT).gba	:	$(OUTPUT).elf$/;"	t
%.bin.o	Makefile	/^%.bin.o	:	%.bin$/;"	t
%.gba	Makefile	/^%.gba: %.elf$/;"	t
%.h	Makefile	/^%.s %.h	: %.grit$/;"	t
%.raw.o	Makefile	/^%.raw.o	:	%.raw$/;"	t
%.s	Makefile	/^%.s %.h	: %.grit$/;"	t
ARCH	Makefile	/^ARCH	:=	-mthumb -mthumb-interwork$/;"	m
ASFLAGS	Makefile	/^ASFLAGS	:=	$(ARCH) $(INCLUDE)$/;"	m
BINFILES	Makefile	/^BINFILES	:=	$(foreach dir,$(DATA),$(notdir $(wildcard $(dir)\/*.*)))$/;"	m
BUILD	Makefile	/^BUILD		:=	build$/;"	m
CFILES	Makefile	/^CFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)\/*.c)))$/;"	m
CFLAGS	Makefile	/^CFLAGS	:=	-g -Wall -O3\\$/;"	m
CLoop	src\\timing.c	/^void CLoop() {$/;"	f	typeref:typename:void
CPPFILES	Makefile	/^CPPFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)\/*.cpp)))$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS	:=	$(CFLAGS) -fno-rtti -fno-exceptions$/;"	m
DATA	Makefile	/^DATA		:=$/;"	m
DEPENDS	Makefile	/^DEPENDS	:=	$(OFILES:.o=.d)$/;"	m
DEPSDIR	Makefile	/^export DEPSDIR	:=	$(CURDIR)\/$(BUILD)$/;"	m
DMA3SAD	include\\macros.s	/^#define DMA3SAD /;"	d	file:
GRAPHICS	Makefile	/^GRAPHICS	:=	gfx$/;"	m
GRID_STRIDE	include\\common.h	/^#define GRID_STRIDE /;"	d
GRITFILES	Makefile	/^GRITFILES	:=	$(foreach dir,$(GRAPHICS),$(notdir $(wildcard $(dir)\/*.grit)))$/;"	m
IME	include\\macros.s	/^#define IME /;"	d	file:
INCLUDE	Makefile	/^export INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)\/$(dir)) \\$/;"	m
INCLUDES	Makefile	/^INCLUDES	:=	include$/;"	m
IOReadTest	src\\io-read.c	/^struct IOReadTest {$/;"	s	file:
LD	Makefile	/^	export LD	:=	$(CC)$/;"	m
LD	Makefile	/^	export LD	:=	$(CXX)$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	=	-g $(ARCH) -Wl,-Map,$(notdir $@).map$/;"	m
LIBDIRS	Makefile	/^LIBDIRS	:=	$(LIBGBA)$/;"	m
LIBPATHS	Makefile	/^export LIBPATHS	:=	$(foreach dir,$(LIBDIRS),-L$(dir)\/lib)$/;"	m
LIBS	Makefile	/^LIBS	:=	-lgba$/;"	m
MemoryTest	src\\memory.c	/^struct MemoryTest {$/;"	s	file:
OFILES	Makefile	/^export OFILES	:=	$(addsuffix .o,$(BINFILES)) \\$/;"	m
OUTPUT	Makefile	/^export OUTPUT	:=	$(CURDIR)\/$(TARGET)$/;"	m
REG_WAITCNT	include\\common.h	/^#define REG_WAITCNT /;"	d
RUN_TEST	include\\macros.s	/^#define RUN_TEST(/;"	d	file:
SFILES	Makefile	/^SFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)\/*.s)))$/;"	m
SOURCES	Makefile	/^SOURCES		:=	src src\/tests$/;"	m
START	include\\macros.s	/^.macro START$/;"	m
TARGET	Makefile	/^TARGET		:=	suite$/;"	m
TEST_ALL	include\\macros.s	/^#define TEST_ALL(/;"	d	file:
TEST_ARM	include\\common.h	/^#define TEST_ARM /;"	d
TEST_ARM	include\\macros.s	/^#define TEST_ARM(/;"	d	file:
TEST_SINGLE	include\\macros.s	/^#define TEST_SINGLE(/;"	d	file:
TEST_THUMB	include\\common.h	/^#define TEST_THUMB /;"	d
TEST_THUMB	include\\macros.s	/^#define TEST_THUMB(/;"	d	file:
TEST_VARIANT	include\\macros.s	/^#define TEST_VARIANT(/;"	d	file:
TM0CNT_LO	include\\macros.s	/^#define TM0CNT_LO /;"	d	file:
TestConfigurations	src\\memory.c	/^struct TestConfigurations {$/;"	s	file:
TestSuite	include\\suite.h	/^struct TestSuite {$/;"	s
TestTimings	src\\timing.c	/^struct TestTimings {$/;"	s	file:
TimingTest	src\\timing.c	/^struct TimingTest {$/;"	s	file:
VIEW_SIZE	include\\common.h	/^#define VIEW_SIZE /;"	d
VPATH	Makefile	/^export VPATH	:=	$(foreach dir,$(SOURCES),$(CURDIR)\/$(dir)) \\$/;"	m
VideoTest	src\\video.c	/^struct VideoTest {$/;"	s	file:
WAITCNT	include\\macros.s	/^#define WAITCNT /;"	d	file:
_	include\\macros.s	/^#define _(/;"	d	file:
_anchor	src\\main.c	/^EWRAM_DATA const int _anchor = 0xABAD1DEA; \/\/ There seems to be a bug in the ld script that th/;"	v	typeref:typename:EWRAM_DATA const int
_arm_ewram_0000	include\\macros.s	/^#define _arm_ewram_0000 /;"	d	file:
_arm_iwram_0000	include\\macros.s	/^#define _arm_iwram_0000 /;"	d	file:
_arm_text_0000	include\\macros.s	/^#define _arm_text_0000 /;"	d	file:
_arm_text_0004	include\\macros.s	/^#define _arm_text_0004 /;"	d	file:
_arm_text_0010	include\\macros.s	/^#define _arm_text_0010 /;"	d	file:
_arm_text_0014	include\\macros.s	/^#define _arm_text_0014 /;"	d	file:
_arm_text_4000	include\\macros.s	/^#define _arm_text_4000 /;"	d	file:
_arm_text_4004	include\\macros.s	/^#define _arm_text_4004 /;"	d	file:
_arm_text_4010	include\\macros.s	/^#define _arm_text_4010 /;"	d	file:
_arm_text_4014	include\\macros.s	/^#define _arm_text_4014 /;"	d	file:
_c16	src\\memory.c	/^	u32 _c16[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_c16u1	src\\memory.c	/^	u32 _c16u1[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_c32	src\\memory.c	/^	u32 _c32[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_c32u1	src\\memory.c	/^	u32 _c32u1[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_c32u2	src\\memory.c	/^	u32 _c32u2[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_c32u3	src\\memory.c	/^	u32 _c32u3[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_cf32	src\\memory.c	/^	u32 _cf32[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_cf32u1	src\\memory.c	/^	u32 _cf32u1[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_cf32u2	src\\memory.c	/^	u32 _cf32u2[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_cf32u3	src\\memory.c	/^	u32 _cf32u3[8];$/;"	m	struct:TestConfigurations	typeref:typename:u32[8]	file:
_d0_16	src\\memory.c	/^	u32 _d0_16;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d0_16u1	src\\memory.c	/^	u32 _d0_16u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d0_32	src\\memory.c	/^	u32 _d0_32;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d0_32u1	src\\memory.c	/^	u32 _d0_32u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d0_32u2	src\\memory.c	/^	u32 _d0_32u2;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d0_32u3	src\\memory.c	/^	u32 _d0_32u3;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d1_16	src\\memory.c	/^	u32 _d1_16;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d1_16u1	src\\memory.c	/^	u32 _d1_16u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d1_32	src\\memory.c	/^	u32 _d1_32;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d1_32u1	src\\memory.c	/^	u32 _d1_32u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d1_32u2	src\\memory.c	/^	u32 _d1_32u2;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d1_32u3	src\\memory.c	/^	u32 _d1_32u3;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d2_16	src\\memory.c	/^	u32 _d2_16;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d2_16u1	src\\memory.c	/^	u32 _d2_16u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d2_32	src\\memory.c	/^	u32 _d2_32;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d2_32u1	src\\memory.c	/^	u32 _d2_32u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d2_32u2	src\\memory.c	/^	u32 _d2_32u2;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d2_32u3	src\\memory.c	/^	u32 _d2_32u3;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d3_16	src\\memory.c	/^	u32 _d3_16;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d3_16u1	src\\memory.c	/^	u32 _d3_16u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d3_32	src\\memory.c	/^	u32 _d3_32;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d3_32u1	src\\memory.c	/^	u32 _d3_32u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d3_32u2	src\\memory.c	/^	u32 _d3_32u2;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_d3_32u3	src\\memory.c	/^	u32 _d3_32u3;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_runTest	src\\io-read.c	/^static u16 _runTest(const struct IOReadTest* test) {$/;"	f	typeref:typename:u16	file:
_s16	src\\memory.c	/^	u32 _s16;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_s16u1	src\\memory.c	/^	u32 _s16u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_s8	src\\memory.c	/^	u32 _s8;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_thumb_ewram_0000	include\\macros.s	/^#define _thumb_ewram_0000 /;"	d	file:
_thumb_iwram_0000	include\\macros.s	/^#define _thumb_iwram_0000 /;"	d	file:
_thumb_text_0000	include\\macros.s	/^#define _thumb_text_0000 /;"	d	file:
_thumb_text_0004	include\\macros.s	/^#define _thumb_text_0004 /;"	d	file:
_thumb_text_0010	include\\macros.s	/^#define _thumb_text_0010 /;"	d	file:
_thumb_text_0014	include\\macros.s	/^#define _thumb_text_0014 /;"	d	file:
_thumb_text_4000	include\\macros.s	/^#define _thumb_text_4000 /;"	d	file:
_thumb_text_4004	include\\macros.s	/^#define _thumb_text_4004 /;"	d	file:
_thumb_text_4010	include\\macros.s	/^#define _thumb_text_4010 /;"	d	file:
_thumb_text_4014	include\\macros.s	/^#define _thumb_text_4014 /;"	d	file:
_u16	src\\memory.c	/^	u32 _u16;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_u16u1	src\\memory.c	/^	u32 _u16u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_u32	src\\memory.c	/^	u32 _u32;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_u32u1	src\\memory.c	/^	u32 _u32u1;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_u32u2	src\\memory.c	/^	u32 _u32u2;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_u32u3	src\\memory.c	/^	u32 _u32u3;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
_u8	src\\memory.c	/^	u32 _u8;$/;"	m	struct:TestConfigurations	typeref:typename:u32	file:
actual	src\\video.c	/^	void (*actual)(void);$/;"	m	struct:VideoTest	typeref:typename:void (*)(void)	file:
address	src\\io-read.c	/^	u32 address;$/;"	m	struct:IOReadTest	typeref:typename:u32	file:
all	Makefile	/^all	: $(BUILD)$/;"	t
arm_ewram	src\\timing.c	/^	s32 arm_ewram;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_iwram	src\\timing.c	/^	s32 arm_iwram;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_text_0000	src\\timing.c	/^	s32 arm_text_0000;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_text_0004	src\\timing.c	/^	s32 arm_text_0004;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_text_0010	src\\timing.c	/^	s32 arm_text_0010;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_text_0014	src\\timing.c	/^	s32 arm_text_0014;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_text_4000	src\\timing.c	/^	s32 arm_text_4000;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_text_4004	src\\timing.c	/^	s32 arm_text_4004;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_text_4010	src\\timing.c	/^	s32 arm_text_4010;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
arm_text_4014	src\\timing.c	/^	s32 arm_text_4014;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
basic3Actual	src\\video.c	/^static void basic3Actual(void) {$/;"	f	typeref:typename:void	file:
basic4Actual	src\\video.c	/^static void basic4Actual(void) {$/;"	f	typeref:typename:void	file:
basicExpected	src\\video.c	/^static void basicExpected(void) {$/;"	f	typeref:typename:void	file:
calibration	src\\timing.c	/^static struct TestTimings calibration;$/;"	v	typeref:struct:TestTimings	file:
clean	Makefile	/^clean:$/;"	t
constZero	src\\video.c	/^const static unsigned constZero = 0;$/;"	v	typeref:typename:const unsigned	file:
degenerateObjTransform	src\\video.c	/^static void degenerateObjTransform(void) {$/;"	f	typeref:typename:void	file:
degenerateObjTransformExpected	src\\video.c	/^static void degenerateObjTransformExpected(void) {$/;"	f	typeref:typename:void	file:
dmaIwram	src\\tests\\dma.s	/^dmaIwram:$/;"	l
dmaRom	src\\tests\\dma.s	/^dmaRom:$/;"	l
doResult	src\\io-read.c	/^static void doResult(const struct IOReadTest* test) {$/;"	f	typeref:typename:void	file:
doResult	src\\memory.c	/^static void doResult(const char* preface, s32 value, s32 expected) {$/;"	f	typeref:typename:void	file:
doResult	src\\timing.c	/^static void doResult(const char* preface, s32 value, s32 calibration, s32 expected) {$/;"	f	typeref:typename:void	file:
expected	src\\io-read.c	/^	u16 expected;$/;"	m	struct:IOReadTest	typeref:typename:u16	file:
expected	src\\memory.c	/^	struct TestConfigurations expected;$/;"	m	struct:MemoryTest	typeref:struct:TestConfigurations	file:
expected	src\\timing.c	/^	struct TestTimings expected;$/;"	m	struct:TimingTest	typeref:struct:TestTimings	file:
expected	src\\video.c	/^	void (*expected)(void);$/;"	m	struct:VideoTest	typeref:typename:void (*)(void)	file:
fillSquare	src\\video.c	/^static void fillSquare(u32* base, u32 fill) {$/;"	f	typeref:typename:void	file:
ioReadTestSuite	src\\io-read.c	/^const struct TestSuite ioReadTestSuite = {$/;"	v	typeref:typename:const struct TestSuite
ioReadTests	src\\io-read.c	/^static const struct IOReadTest ioReadTests[] = {$/;"	v	typeref:typename:const struct IOReadTest[]	file:
ldr	include\\macros.s	/^ldr r0, =TM0CNT_LO$/;"	l
ldr	include\\macros.s	/^ldr r1, =0x800000$/;"	l
ldrh	include\\macros.s	/^ldrh r2, [r0]$/;"	l
list	include\\suite.h	/^	size_t (*list)(const char** names, size_t size, size_t offset);$/;"	m	struct:TestSuite	typeref:typename:size_t (*)(const char ** names,size_t size,size_t offset)
listIOReadSuite	src\\io-read.c	/^static size_t listIOReadSuite(const char** names, size_t size, size_t offset) {$/;"	f	typeref:typename:size_t	file:
listMemorySuite	src\\memory.c	/^static size_t listMemorySuite(const char** names, size_t size, size_t offset) {$/;"	f	typeref:typename:size_t	file:
listTimingSuite	src\\timing.c	/^static size_t listTimingSuite(const char** names, size_t size, size_t offset) {$/;"	f	typeref:typename:size_t	file:
listVideoSuite	src\\video.c	/^static size_t listVideoSuite(const char** names, size_t size, size_t offset) {$/;"	f	typeref:typename:size_t	file:
longjump	src\\timing.c	/^void longjump() {$/;"	f	typeref:typename:void
main	src\\main.c	/^int main(void) {$/;"	f	typeref:typename:int
memoryTestSuite	src\\memory.c	/^const struct TestSuite memoryTestSuite = {$/;"	v	typeref:typename:const struct TestSuite
memoryTests	src\\memory.c	/^static const struct MemoryTest memoryTests[] = {$/;"	v	typeref:typename:const struct MemoryTest[]	file:
modes	src\\timing.c	/^	int modes;$/;"	m	struct:TimingTest	typeref:typename:int	file:
mov	include\\macros.s	/^mov r0, r2$/;"	l
nSuites	src\\main.c	/^const size_t nSuites = sizeof(suites) \/ sizeof(*suites);$/;"	v	typeref:typename:const size_t
nTests	include\\suite.h	/^	const size_t nTests;$/;"	m	struct:TestSuite	typeref:typename:const size_t
nTests	src\\io-read.c	/^static const u32 nTests = sizeof(ioReadTests) \/ sizeof(*ioReadTests);$/;"	v	typeref:typename:const u32	file:
nTests	src\\memory.c	/^static const u32 nTests = sizeof(memoryTests) \/ sizeof(*memoryTests);$/;"	v	typeref:typename:const u32	file:
nTests	src\\video.c	/^static const u32 nTests = sizeof(videoTests) \/ sizeof(*videoTests);$/;"	v	typeref:typename:const u32	file:
nTimingTests	src\\timing.c	/^static const u32 nTimingTests = sizeof(timingTests) \/ sizeof(*timingTests);$/;"	v	typeref:typename:const u32	file:
name	include\\suite.h	/^	const char* name;$/;"	m	struct:TestSuite	typeref:typename:const char *
passes	include\\suite.h	/^	const unsigned* passes;$/;"	m	struct:TestSuite	typeref:typename:const unsigned *
passes	src\\io-read.c	/^static unsigned passes;$/;"	v	typeref:typename:unsigned	file:
passes	src\\memory.c	/^static unsigned passes;$/;"	v	typeref:typename:unsigned	file:
passes	src\\timing.c	/^static unsigned passes;$/;"	v	typeref:typename:unsigned	file:
printResult	src\\memory.c	/^static void printResult(int offset, int line, const char* preface, u32 value, u32 expected) {$/;"	f	typeref:typename:void	file:
printResult	src\\timing.c	/^static void printResult(int offset, int line, const char* preface, s32 value, s32 calibration, s/;"	f	typeref:typename:void	file:
printResults	src\\io-read.c	/^static void printResults(int offset, int line, const struct IOReadTest* test) {$/;"	f	typeref:typename:void	file:
printResults	src\\memory.c	/^static void printResults(const char* preface, const struct TestConfigurations* values, const str/;"	f	typeref:typename:void	file:
printResults	src\\timing.c	/^static void printResults(const char* preface, const struct TestTimings* values, const struct Tes/;"	f	typeref:typename:void	file:
r2	src\\memory.c	/^static EWRAM_DATA u32 r2[8] = {$/;"	v	typeref:typename:EWRAM_DATA u32[8]	file:
r3	src\\memory.c	/^static IWRAM_DATA u32 r3[8] = {$/;"	v	typeref:typename:IWRAM_DATA u32[8]	file:
r8	src\\memory.c	/^static const u32 r8[8] = {$/;"	v	typeref:typename:const u32[8]	file:
restore	src\\io-read.c	/^	u16 restore;$/;"	m	struct:IOReadTest	typeref:typename:u16	file:
restoreAfter	src\\io-read.c	/^	bool restoreAfter;$/;"	m	struct:IOReadTest	typeref:typename:bool	file:
run	include\\suite.h	/^	void (*run)(void);$/;"	m	struct:TestSuite	typeref:typename:void (*)(void)
runIOReadSuite	src\\io-read.c	/^static void runIOReadSuite(void) {$/;"	f	typeref:typename:void	file:
runMemorySuite	src\\memory.c	/^static void runMemorySuite(void) {$/;"	f	typeref:typename:void	file:
runSuite	src\\main.c	/^static void runSuite(const struct TestSuite* activeSuite) {$/;"	f	typeref:typename:void	file:
runTimingSuite	src\\timing.c	/^static void runTimingSuite(void) {$/;"	f	typeref:typename:void	file:
savetype	src\\main.c	/^const char savetype[] = "SRAM_V123";$/;"	v	typeref:typename:const char[]
savprintf	src\\main.c	/^int savprintf(const char* fmt, ...) {$/;"	f	typeref:typename:int
show	include\\suite.h	/^	void (*show)(size_t index);$/;"	m	struct:TestSuite	typeref:typename:void (*)(size_t index)
showIOReadSuite	src\\io-read.c	/^static void showIOReadSuite(size_t index) {$/;"	f	typeref:typename:void	file:
showMemorySuite	src\\memory.c	/^static void showMemorySuite(size_t index) {$/;"	f	typeref:typename:void	file:
showTimingSuite	src\\timing.c	/^static void showTimingSuite(size_t index) {$/;"	f	typeref:typename:void	file:
showVideoSuite	src\\video.c	/^static void showVideoSuite(size_t index) {$/;"	f	typeref:typename:void	file:
store	src\\memory.c	/^	bool store;$/;"	m	struct:MemoryTest	typeref:typename:bool	file:
storeFirst	src\\io-read.c	/^	bool storeFirst;$/;"	m	struct:IOReadTest	typeref:typename:bool	file:
str	include\\macros.s	/^str r1, [r0]$/;"	l
strh	include\\macros.s	/^strh r1, [r0, #2]$/;"	l
suites	src\\main.c	/^const struct TestSuite* const suites[] = {$/;"	v	typeref:typename:const struct TestSuite * const[]
test	src\\memory.c	/^	void (*test)(struct TestConfigurations*);$/;"	m	struct:MemoryTest	typeref:typename:void (*)(struct TestConfigurations *)	file:
test	src\\timing.c	/^	void (*test)(struct TestTimings*);$/;"	m	struct:TimingTest	typeref:typename:void (*)(struct TestTimings *)	file:
testLoad	src\\memory.c	/^static void testLoad(struct TestConfigurations* config, u8* base) {$/;"	f	typeref:typename:void	file:
testLoadBIOS	src\\memory.c	/^static void testLoadBIOS(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadBIOSBad	src\\memory.c	/^static void testLoadBIOSBad(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadBad	src\\memory.c	/^static void testLoadBad(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadEWRAM	src\\memory.c	/^static void testLoadEWRAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadEWRAMMirror	src\\memory.c	/^static void testLoadEWRAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadIWRAM	src\\memory.c	/^static void testLoadIWRAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadIWRAMMirror	src\\memory.c	/^static void testLoadIWRAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadOAM	src\\memory.c	/^static void testLoadOAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadOAMMirror	src\\memory.c	/^static void testLoadOAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadPalette	src\\memory.c	/^static void testLoadPalette(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadPaletteMirror	src\\memory.c	/^static void testLoadPaletteMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadROM	src\\memory.c	/^static void testLoadROM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadROMBad	src\\memory.c	/^static void testLoadROMBad(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadSRAM	src\\memory.c	/^static void testLoadSRAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadSRAMMirror	src\\memory.c	/^static void testLoadSRAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadVRAM	src\\memory.c	/^static void testLoadVRAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadVRAM2	src\\memory.c	/^static void testLoadVRAM2(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadVRAM2Mirror	src\\memory.c	/^static void testLoadVRAM2Mirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadVRAM2Mirror2	src\\memory.c	/^static void testLoadVRAM2Mirror2(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testLoadVRAMMirror	src\\memory.c	/^static void testLoadVRAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testName	src\\io-read.c	/^	const char* testName;$/;"	m	struct:IOReadTest	typeref:typename:const char *	file:
testName	src\\memory.c	/^	const char* testName;$/;"	m	struct:MemoryTest	typeref:typename:const char *	file:
testName	src\\timing.c	/^	const char* testName;$/;"	m	struct:TimingTest	typeref:typename:const char *	file:
testName	src\\video.c	/^	const char* testName;$/;"	m	struct:VideoTest	typeref:typename:const char *	file:
testStore	src\\memory.c	/^static void testStore(struct TestConfigurations* config, u32* base) {$/;"	f	typeref:typename:void	file:
testStoreEWRAM	src\\memory.c	/^static void testStoreEWRAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreEWRAMMirror	src\\memory.c	/^static void testStoreEWRAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreIWRAM	src\\memory.c	/^static void testStoreIWRAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreIWRAMMirror	src\\memory.c	/^static void testStoreIWRAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreOAM	src\\memory.c	/^static void testStoreOAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreOAMMirror	src\\memory.c	/^static void testStoreOAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStorePalette	src\\memory.c	/^static void testStorePalette(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStorePaletteMirror	src\\memory.c	/^static void testStorePaletteMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreROM	src\\memory.c	/^static void testStoreROM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreSRAM	src\\memory.c	/^static void testStoreSRAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreSRAMMirror	src\\memory.c	/^static void testStoreSRAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreVRAM	src\\memory.c	/^static void testStoreVRAM(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreVRAM2	src\\memory.c	/^static void testStoreVRAM2(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreVRAM2Mirror	src\\memory.c	/^static void testStoreVRAM2Mirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreVRAM2Mirror2	src\\memory.c	/^static void testStoreVRAM2Mirror2(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
testStoreVRAMMirror	src\\memory.c	/^static void testStoreVRAMMirror(struct TestConfigurations* config) {$/;"	f	typeref:typename:void	file:
textBase	src\\main.c	/^u16* textBase = (u16*) VRAM;$/;"	v	typeref:typename:u16 *
textGrid	src\\main.c	/^char textGrid[32 * 32];$/;"	v	typeref:typename:char[]
thumb_ewram	src\\timing.c	/^	s32 thumb_ewram;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_iwram	src\\timing.c	/^	s32 thumb_iwram;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_text_0000	src\\timing.c	/^	s32 thumb_text_0000;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_text_0004	src\\timing.c	/^	s32 thumb_text_0004;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_text_0010	src\\timing.c	/^	s32 thumb_text_0010;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_text_0014	src\\timing.c	/^	s32 thumb_text_0014;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_text_4000	src\\timing.c	/^	s32 thumb_text_4000;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_text_4004	src\\timing.c	/^	s32 thumb_text_4004;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_text_4010	src\\timing.c	/^	s32 thumb_text_4010;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
thumb_text_4014	src\\timing.c	/^	s32 thumb_text_4014;$/;"	m	struct:TestTimings	typeref:typename:s32	file:
timingTestSuite	src\\timing.c	/^const struct TestSuite timingTestSuite = {$/;"	v	typeref:typename:const struct TestSuite
timingTests	src\\timing.c	/^static const struct TimingTest timingTests[] = {$/;"	v	typeref:typename:const struct TimingTest[]	file:
totalResults	include\\suite.h	/^	const unsigned* totalResults;$/;"	m	struct:TestSuite	typeref:typename:const unsigned *
totalResults	src\\io-read.c	/^static unsigned totalResults;$/;"	v	typeref:typename:unsigned	file:
totalResults	src\\memory.c	/^static unsigned totalResults;$/;"	v	typeref:typename:unsigned	file:
totalResults	src\\timing.c	/^static unsigned totalResults;$/;"	v	typeref:typename:unsigned	file:
updateTextGrid	src\\main.c	/^void updateTextGrid(void) {$/;"	f	typeref:typename:void
videoTestSuite	src\\video.c	/^const struct TestSuite videoTestSuite = {$/;"	v	typeref:typename:const struct TestSuite
videoTests	src\\video.c	/^static const struct VideoTest videoTests[] = {$/;"	v	typeref:typename:const struct VideoTest[]	file:
